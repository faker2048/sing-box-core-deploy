#!/bin/sh

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ÊâìÂç∞Ê†áÈ¢ò
print_title() {
    echo -e "${CYAN}================================${NC}"
    echo -e "${CYAN}    Sing-Box Status Check${NC}"
    echo -e "${CYAN}================================${NC}"
}

# ÊâìÂç∞ÂàÜÈöîÁ∫ø
print_separator() {
    echo -e "${BLUE}--------------------------------${NC}"
}

# Ê£ÄÊü•ÁâàÊú¨
check_version() {
    echo -e "${PURPLE}üì¶ Sing-Box Version:${NC}"
    if command -v sing-box >/dev/null 2>&1; then
        version=$(sing-box version 2>/dev/null | head -n1)
        echo -e "   ${GREEN}‚úì${NC} $version"
    else
        echo -e "   ${RED}‚úó${NC} Sing-box not installed"
    fi
}

# Ê£ÄÊü•ËøõÁ®ãÁä∂ÊÄÅ
check_process() {
    echo -e "${PURPLE}üîÑ Process Status:${NC}"
    if pgrep -f "sing-box" >/dev/null; then
        pid=$(pgrep -f "sing-box")
        echo -e "   ${GREEN}‚úì${NC} Running (PID: $pid)"
        
        # Ê£ÄÊü•ÂÜÖÂ≠ò‰ΩøÁî®
        if [ -f /proc/$pid/status ]; then
            mem=$(grep VmRSS /proc/$pid/status | awk '{print $2 " " $3}')
            echo -e "   ${CYAN}üìä${NC} Memory Usage: $mem"
        fi
    else
        echo -e "   ${RED}‚úó${NC} Not running"
    fi
}

# Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
check_service() {
    echo -e "${PURPLE}‚öôÔ∏è  Service Status:${NC}"
    if [ -f /etc/init.d/sing-box ]; then
        echo -e "   ${GREEN}‚úì${NC} Init script exists"
        
        # Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
        if /etc/init.d/sing-box status >/dev/null 2>&1; then
            echo -e "   ${GREEN}‚úì${NC} Service is active"
        else
            echo -e "   ${YELLOW}‚ö†${NC} Service inactive"
        fi
        
        # Ê£ÄÊü•ÂºÄÊú∫Ëá™ÂêØ
        if ls /etc/rc.d/S*sing-box >/dev/null 2>&1; then
            echo -e "   ${GREEN}‚úì${NC} Auto-start enabled"
        else
            echo -e "   ${YELLOW}‚ö†${NC} Auto-start disabled"
        fi
    else
        echo -e "   ${RED}‚úó${NC} Init script not found"
    fi
}

# Ê£ÄÊü•ÈÖçÁΩÆÊñá‰ª∂
check_config() {
    echo -e "${PURPLE}üìÑ Configuration:${NC}"
    if [ -f /etc/sing-box/config.json ]; then
        echo -e "   ${GREEN}‚úì${NC} Config file exists"
        size=$(du -h /etc/sing-box/config.json | cut -f1)
        echo -e "   ${CYAN}üìè${NC} File size: $size"
        
        # ÁÆÄÂçïÁöÑJSONËØ≠Ê≥ïÊ£ÄÊü•
        if command -v jsonlint >/dev/null 2>&1; then
            if jsonlint /etc/sing-box/config.json >/dev/null 2>&1; then
                echo -e "   ${GREEN}‚úì${NC} JSON syntax valid"
            else
                echo -e "   ${RED}‚úó${NC} JSON syntax error"
            fi
        fi
    else
        echo -e "   ${RED}‚úó${NC} Config file not found"
    fi
}

# Ê£ÄÊü•Á´ØÂè£Âç†Áî®
check_ports() {
    echo -e "${PURPLE}üåê Port Status:${NC}"
    if [ -f /etc/sing-box/config.json ]; then
        # Â∞ùËØï‰ªéÈÖçÁΩÆÊñá‰ª∂‰∏≠ÊèêÂèñÁ´ØÂè£ÔºàÁÆÄÂçïÊñπÊ≥ïÔºâ
        ports=$(grep -o '"listen"[[:space:]]*:[[:space:]]*"[^"]*"' /etc/sing-box/config.json 2>/dev/null | grep -o '[0-9]\+' | head -3)
        if [ -n "$ports" ]; then
            for port in $ports; do
                if netstat -ln 2>/dev/null | grep ":$port " >/dev/null; then
                    echo -e "   ${GREEN}‚úì${NC} Port $port is listening"
                else
                    echo -e "   ${YELLOW}‚ö†${NC} Port $port not listening"
                fi
            done
        else
            echo -e "   ${YELLOW}‚ö†${NC} Could not detect ports from config"
        fi
    else
        echo -e "   ${RED}‚úó${NC} Config file not available"
    fi
}

# Ê£ÄÊü•Á≥ªÁªüËµÑÊ∫ê
check_system() {
    echo -e "${PURPLE}üíª System Resources:${NC}"
    
    # ÂÜÖÂ≠ò‰ΩøÁî®
    mem_info=$(free | grep Mem)
    mem_total=$(echo $mem_info | awk '{print int($2/1024)"MB"}')
    mem_used=$(echo $mem_info | awk '{print int($3/1024)"MB"}')
    mem_percent=$(echo $mem_info | awk '{printf "%.1f", ($3/$2)*100}')
    echo -e "   ${CYAN}üíæ${NC} Memory: $mem_used/$mem_total (${mem_percent}%)"
    
    # Ë¥üËΩΩ
    if [ -f /proc/loadavg ]; then
        load=$(cat /proc/loadavg | cut -d' ' -f1-3)
        echo -e "   ${CYAN}‚ö°${NC} Load Average: $load"
    fi
}

# ÊòæÁ§∫ÊúÄËøëÊó•Âøó
check_logs() {
    echo -e "${PURPLE}üìã Recent Logs:${NC}"
    if command -v logread >/dev/null 2>&1; then
        logs=$(logread | grep -i sing-box | tail -3)
        if [ -n "$logs" ]; then
            echo "$logs" | while read line; do
                echo -e "   ${YELLOW}üìù${NC} $line"
            done
        else
            echo -e "   ${YELLOW}‚ö†${NC} No recent logs found"
        fi
    else
        echo -e "   ${YELLOW}‚ö†${NC} Logread not available"
    fi
}

# ‰∏ªÂáΩÊï∞
main() {
    print_title
    echo
    
    check_version
    print_separator
    
    check_process
    print_separator
    
    check_service
    print_separator
    
    check_config
    print_separator
    
    check_ports
    print_separator
    
    check_system
    print_separator
    
    check_logs
    
    echo
    echo -e "${CYAN}================================${NC}"
    echo -e "${CYAN}Status check completed at $(date)${NC}"
    echo -e "${CYAN}================================${NC}"
}

main
